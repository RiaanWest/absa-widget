// Colors
// --------------------------
$white:                     #fff;
$black:                     #000;
$red:                       #d9534f;
$orange:                    #f0ad4e;
$yellow:                    #ffd500;
$green:                     #5cb85c;
$blue:                      #3f51b5;
$teal:                      #5bc0de;
$pink:                      #ff5b77;
$purple:                    #7986cb;

$gray-90:                   lighten($black, 10%);
$gray-80:                   lighten($black, 20%);
$gray-70:                   lighten($black, 30%);
$gray-60:                   lighten($black, 40%);
$gray-50:                   lighten($black, 50%);
$gray-40:                   lighten($black, 60%);
$gray-30:                   lighten($black, 70%);
$gray-20:                   lighten($black, 80%);
$gray-10:                   lighten($black, 90%);

$brand-primary:             $blue;
$brand-secondary:           $purple;
$brand-success:             $green;
$brand-info:                $teal;
$brand-warning:             $orange;
$brand-danger:              $red;
$brand-inverse:             $gray-80;


// Options
// ----------------------------
$enable-rounded:            true;
$enable-shadows:            false;
$enable-gradients:          false;
$enable-transitions:        true;
$enable-hover-media-query:  false;
$enable-grid-classes:       true;
$enable-print-styles:       true;


// Body
// ----------------------------
$body-bg:                   #f7f7f7;
$body-color:                $white;
$spacer:                    1rem;

// Z-indexes
// ----------------------------
$zindex-overlay:            100000;
$zindex-widget:             100010;
$zindex-buttons:            100020;

// Links
// ----------------------------
$link-color:                $brand-primary;
$link-decoration:           none;
$link-hover-color:          darken($link-color, 15%);
$link-hover-decoration:     underline;

$text-muted:                $gray-30;

// Fonts
// -------------------------
$font-family-sans-serif:        'Nunito', Arial, sans-serif;
$font-family-monospace:         'Courier New', Menlo, Monaco, Consolas, monospace;
$font-family-base:              $font-family-sans-serif;


// Forms
// -------------------------
$cursor-disabled:                not-allowed;


// Typography
// -------------------------
$text-color:              $white;
$font-size-base:          14px;
$font-size-medium:        16px;
$font-size-large:         19px;
$font-size-small:         10px;

$headings-font-family:    $font-family-sans-serif;
$headings-font-weight:    400;
$headings-line-height:    1.3;
$headings-color:          inherit;

$font-size-h1:            42px;
$font-size-h2:            26px;
$font-size-h3:            26px;
$font-size-h4:            22px;
$font-size-h5:            19px;
$font-size-h6:            16px;

$font-weight-thin:           300;
$font-weight-regular:        400;
$font-weight-bold:           700;

$font-weight-base:          $font-weight-thin;

$dt-font-weight:            $font-weight-bold;

$border-radius-base:        0;
$border-radius-large:       0;
$border-radius-small:       0;

$btn-font-weight:           300;
$line-height-base:          1.5;
$line-height-computed:      floor(($font-size-base * $line-height-base)); // ~20px

$headings-margin-bottom:    $spacer * 1.6;
$headings-font-family:      inherit;
$headings-font-weight:      700;
$headings-line-height:      1.1;
$headings-color:            inherit;


@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}

// Grid breakpoints
// -------------------------
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);



// Tables
// -------------------------
$table-cell-padding:            .75rem;
$table-sm-cell-padding:         .3rem;

$table-bg:                      transparent;

$table-inverse-bg:              $gray-60;
$table-inverse-color:           $body-bg;

$table-bg-accent:               rgba($black,.05);
$table-bg-hover:                rgba($black,.075);
$table-bg-active:               $table-bg-hover;

$table-head-bg:                 $gray-20;
$table-head-color:              $gray-50;

$table-border-width:            1;
$table-border-color:            $gray-20;
